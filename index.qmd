---
title: "Exam-01"
author: "Pablo Vivas"
date: "`r Sys.Date()`"
format:
  html:
    toc: true
    toc-location: left
    toc-depth: 2
    code-copy: true
    code-fold: true
    highlight-style: nord
  docx: default
execute:
  warning: false
  error: false
  echo: true
# bibliography: "assets/assignment-04.bib"
# csl: "assets/apa.csl"
theme: simplex
---

```{r}
#| label: set-up
#| echo: false

library(broom)
library(cowplot)
library(gt)
library(skimr)
library(patchwork)
library(tidyverse)
```

# Question 1

## Pre-work

First, we read the data and take a look at how does it look.

```{r}
#| label: tbl-read-data
#| tbl-cap: Sample of (n=10) observations of the World data 

world = read_csv("data/world-3.csv")

world |> 
  sample_n(10) |> 
  arrange(country) |> 
  gt() |> 
  fmt_number(
    columns = c(6, 10, 11, 12),
    decimals = 2
  )
```

Then, we make a description of all the numeric values.

```{r}
#| label: tbl-desc-data
#| tbl-cap: Summary of numeric variables for the World data 

world |> 
  select(where(is.numeric)) |> 
  skim() |> 
  select(-1) |> 
  gt() |> 
  fmt_number(
    columns = 3:10,
    decimals = 2
  ) |> 
  cols_label(
    skim_variable = "variable",
    n_missing = "missing",
    numeric.mean = "mean",
    numeric.sd = "std",
    numeric.p0 = "p0",
    numeric.p25 = "p25",
    numeric.p50 = "p50",
    numeric.p75 = "p75",
    numeric.p100 = "p100",
    numeric.hist = "histogram"
  ) |> 
  cols_align(
    columns = -1,
    align = "center"
  )
```

We see from @tbl-desc-data that some of the variables have missing data, specifically, the `literacym` variable has complete rate of 78%. Also, the standard deviation from each variable is in a different scale, ranging from 0.62 units in `gdp` to 38.08 units in `babymort`. This makes sense because some variables are in a log-scale.

::: {.callout-note}
Given this scenario, we would prefer to perform pca with the correlation matrix.
:::

## Real work

### a)

We perform two principal component analysis using: a) the covariance matrix and b) the correlation matrix.

```{r}
#| label: pca-perform

# get complete cases
world_complete = world |> 
  drop_na()

# for the covariance matrix
pca_cov = world_complete |> 
  select(-c(1,2)) |> 
  prcomp()

# for the correlation matrix
pca_cor = world_complete |> 
  select(-c(1,2)) |> 
  prcomp(scale = TRUE)

# matrix with loadings
loadings = bind_rows(
  pca_cov |> 
  tidy(matrix = "rotation") |> 
  mutate(matrix = factor("covariance")),
  pca_cor |> 
  tidy(matrix = "rotation") |> 
  mutate(matrix = factor("correlation"))
)
```

We plot the differences for the first two pcs using each method.

Option 1:

```{r}
#| label: fig-plot-01
#| fig-cap: Representations of the loadings
#| fig-width: 9
#| fig-height: 5

plot_01 = tibble(cor = pca_cor$rotation[,1], cov = pca_cov$rotation[,1]) 
plot_02 = tibble(cor = pca_cor$rotation[,2], cov = pca_cov$rotation[,2]) 

p01 = plot_01 |> 
  ggplot() +
  geom_point(aes(x = cor, y = cov), size = 3) +
  geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "red", size = 1.3) +
  xlim(c(-0.65, 0.65)) +
  ylim(c(-0.65, 0.65)) +
  theme_bw() +
  xlab("PC1 (cor)") +
  ylab("PC1 (cov)")

p02 = plot_02 |> 
  ggplot() +
  geom_point(aes(x = cor, y = cov), size = 3) +
  geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "red", size = 1.3) +
  xlim(c(-0.65, 0.65)) +
  ylim(c(-0.65, 0.65)) +
  theme_bw() +
  xlab("PC2 (cor)") +
  ylab("PC2 (cov)")

p01 | p02
```

Option 2:

```{r}
#| label: fig-plot-02
#| fig-cap: Representations of the loadings
#| fig-width: 9
#| fig-height: 5

loadings |> 
  filter(PC == c(1,2)) |> 
  ggplot() +
  geom_density(aes(x = value, fill = matrix, color = matrix), alpha = 0.6) +
  facet_wrap(vars(PC), nrow = 1) +
  theme_bw() +
  theme(legend.position = "bottom") +
  scale_color_brewer(palette = "Pastel1") +
  scale_fill_brewer(palette = "Pastel1")
```

Option 3:

```{r}
#| label: fig-plot-03
#| fig-cap: Representations of the loadings
#| fig-width: 9
#| fig-height: 5

loadings |> 
  filter(PC == c(1,2)) |> 
  ggplot() +
  geom_boxplot(aes(x = value, y = matrix, fill = matrix, color = matrix), alpha = 0.6) +
  facet_wrap(vars(PC), nrow = 1) +
  theme_bw() +
  theme(legend.position = "none") +
  scale_color_brewer(palette = "Accent") +
  scale_fill_brewer(palette = "Accent")
```

Option 4:

```{r}
#| label: fig-plot-04
#| fig-cap: Representations of the loadings
#| fig-width: 9
#| fig-height: 5

p03 = pca_cov %>%
  tidy(matrix = "eigenvalues") %>%
  ggplot(aes(PC, percent)) +
  geom_col(fill = "#56B4E9", alpha = 0.8) +
  xlab("PCA (cov)") +
  ylim(c(0, 1)) +
  scale_x_continuous(breaks = 1:9) +
  # scale_y_continuous(
  #     labels = scales::percent_format(),
  #     expand = expansion(mult = c(0, 0.01))
  #     ) +
  theme_minimal_hgrid(12)

p04 = pca_cor %>%
  tidy(matrix = "eigenvalues") %>%
  ggplot(aes(PC, percent)) +
  geom_col(fill = "#56B4E9", alpha = 0.8) +
  xlab("PCA (cov)") +
  ylim(c(0, 1)) +
  scale_x_continuous(breaks = 1:9) +
  # scale_y_continuous(
  #     labels = scales::percent_format(),
  #     expand = expansion(mult = c(0, 0.01))
  #     ) +
  theme_minimal_hgrid(12)

p03 | p04
```


### b)

### c)

### d)

```{r}
#| label: fig-pca-01
world_complete = pca_cor |>
  augment(world_complete)
```

# Question 2

# Question 3